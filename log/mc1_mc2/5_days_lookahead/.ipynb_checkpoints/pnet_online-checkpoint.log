Please input the length of days lookahead in {5, 7, 15, 30, 45, 60, 90, 120}: Please specify the coverage of the data {A - Manufacturer 1, B - Manufacturer 2, C - Manufacturer 1 & 2, D - Manufacturer 1 without aging information, E - Balanced Manufacturer 1 & 2}: cuda
[1. 0. 1. ... 0. 1. 1.]
(53870, 30, 11) (2048, 14, 5) (53870,) (13468, 30, 11) (13468, 1)
training 0
testing 0
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
              precision    recall  f1-score   support

           0    0.61753   0.66751   0.64155      6734
           1    0.63823   0.58658   0.61131      6734

    accuracy                        0.62704     13468
   macro avg    0.62788   0.62704   0.62643     13468
weighted avg    0.62788   0.62704   0.62643     13468

training 1
training 2
training 3
training 4
training 5
training 6
training 7
training 8
training 9
training 10
training 11
training 12
training 13
training 14
training 15
training 16
training 17
training 18
training 19
training 20
training 21
training 22
training 23
training 24
training 25
training 26
training 27
training 28
training 29
training 30
training 31
training 32
training 33
training 34
training 35
training 36
training 37
training 38
training 39
training 40
training 41
training 42
training 43
training 44
training 45
training 46
training 47
training 48
training 49
training 50
testing 50
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
              precision    recall  f1-score   support

           0    0.74351   0.71503   0.72899      6734
           1    0.72554   0.75334   0.73918      6734

    accuracy                        0.73418     13468
   macro avg    0.73453   0.73418   0.73409     13468
weighted avg    0.73453   0.73418   0.73409     13468

training 51
training 52
training 53
training 54
training 55
training 56
training 57
training 58
training 59
training 60
training 61
training 62
training 63
training 64
training 65
training 66
training 67
training 68
training 69
training 70
training 71
training 72
training 73
training 74
training 75
training 76
training 77
training 78
training 79
training 80
training 81
training 82
training 83
training 84
training 85
training 86
training 87
training 88
training 89
training 90
training 91
training 92
training 93
training 94
training 95
training 96
training 97
training 98
training 99
training 100
testing 100
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
              precision    recall  f1-score   support

           0    0.73280   0.75913   0.74573      6734
           1    0.75015   0.72320   0.73643      6734

    accuracy                        0.74116     13468
   macro avg    0.74148   0.74116   0.74108     13468
weighted avg    0.74148   0.74116   0.74108     13468

training 101
training 102
training 103
training 104
training 105
training 106
training 107
training 108
training 109
training 110
training 111
training 112
training 113
training 114
training 115
training 116
training 117
training 118
training 119
training 120
training 121
training 122
training 123
training 124
training 125
training 126
training 127
training 128
training 129
training 130
training 131
training 132
training 133
training 134
training 135
training 136
training 137
training 138
training 139
training 140
training 141
training 142
training 143
training 144
training 145
training 146
training 147
training 148
training 149
training 150
testing 150
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
              precision    recall  f1-score   support

           0    0.74103   0.78824   0.76391      6734
           1    0.77383   0.72453   0.74837      6734

    accuracy                        0.75639     13468
   macro avg    0.75743   0.75639   0.75614     13468
weighted avg    0.75743   0.75639   0.75614     13468

training 151
training 152
training 153
training 154
training 155
training 156
training 157
training 158
training 159
training 160
training 161
training 162
training 163
training 164
training 165
training 166
training 167
training 168
training 169
training 170
training 171
training 172
training 173
training 174
training 175
training 176
training 177
training 178
training 179
training 180
training 181
training 182
training 183
training 184
training 185
training 186
training 187
training 188
training 189
training 190
training 191
training 192
training 193
training 194
training 195
training 196
training 197
training 198
training 199
training 200
testing 200
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
              precision    recall  f1-score   support

           0    0.73729   0.79269   0.76399      6734
           1    0.77585   0.71755   0.74556      6734

    accuracy                        0.75512     13468
   macro avg    0.75657   0.75512   0.75478     13468
weighted avg    0.75657   0.75512   0.75478     13468

training 201
training 202
training 203
training 204
training 205
training 206
training 207
training 208
training 209
training 210
training 211
training 212
training 213
training 214
training 215
training 216
training 217
training 218
training 219
training 220
training 221
training 222
training 223
training 224
training 225
training 226
training 227
training 228
training 229
training 230
training 231
training 232
training 233
training 234
training 235
training 236
training 237
training 238
training 239
training 240
training 241
training 242
training 243
training 244
training 245
training 246
training 247
training 248
training 249
training 250
testing 250
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
              precision    recall  f1-score   support

           0    0.76767   0.77428   0.77096      6734
           1    0.77232   0.76567   0.76898      6734

    accuracy                        0.76997     13468
   macro avg    0.76999   0.76997   0.76997     13468
weighted avg    0.76999   0.76997   0.76997     13468

training 251
training 252
training 253
training 254
training 255
training 256
training 257
training 258
training 259
training 260
training 261
training 262
training 263
training 264
training 265
training 266
training 267
training 268
training 269
training 270
training 271
training 272
training 273
training 274
training 275
training 276
training 277
training 278
training 279
training 280
training 281
training 282
training 283
training 284
training 285
training 286
training 287
training 288
training 289
training 290
training 291
training 292
training 293
training 294
training 295
training 296
training 297
training 298
training 299
training 300
testing 300
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
              precision    recall  f1-score   support

           0    0.77019   0.77339   0.77178      6734
           1    0.77244   0.76923   0.77083      6734

    accuracy                        0.77131     13468
   macro avg    0.77131   0.77131   0.77131     13468
weighted avg    0.77131   0.77131   0.77131     13468

training 301
training 302
training 303
training 304
training 305
training 306
training 307
training 308
training 309
training 310
training 311
training 312
training 313
training 314
training 315
training 316
training 317
training 318
training 319
training 320
training 321
training 322
training 323
training 324
training 325
training 326
training 327
training 328
training 329
training 330
training 331
training 332
training 333
training 334
training 335
training 336
training 337
training 338
training 339
training 340
training 341
training 342
training 343
training 344
training 345
training 346
training 347
training 348
training 349
training 350
testing 350
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
              precision    recall  f1-score   support

           0    0.75273   0.81779   0.78391      6734
           1    0.80055   0.73136   0.76440      6734

    accuracy                        0.77458     13468
   macro avg    0.77664   0.77458   0.77416     13468
weighted avg    0.77664   0.77458   0.77416     13468

training 351
training 352
training 353
training 354
training 355
training 356
training 357
training 358
training 359
training 360
training 361
training 362
training 363
training 364
training 365
training 366
training 367
training 368
training 369
training 370
training 371
training 372
training 373
training 374
training 375
training 376
training 377
training 378
training 379
training 380
training 381
training 382
training 383
training 384
training 385
training 386
training 387
training 388
training 389
training 390
training 391
training 392
training 393
training 394
training 395
training 396
training 397
training 398
training 399
training 400
testing 400
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
              precision    recall  f1-score   support

           0    0.76599   0.80740   0.78615      6734
           1    0.79639   0.75334   0.77427      6734

    accuracy                        0.78037     13468
   macro avg    0.78119   0.78037   0.78021     13468
weighted avg    0.78119   0.78037   0.78021     13468

training 401
training 402
training 403
training 404
training 405
training 406
training 407
training 408
training 409
training 410
training 411
training 412
training 413
training 414
training 415
training 416
training 417
training 418
training 419
training 420
training 421
training 422
training 423
training 424
training 425
training 426
training 427
training 428
training 429
training 430
training 431
training 432
training 433
training 434
training 435
training 436
training 437
training 438
training 439
training 440
training 441
training 442
training 443
training 444
training 445
training 446
training 447
training 448
training 449
training 450
testing 450
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
              precision    recall  f1-score   support

           0    0.77950   0.80843   0.79370      6734
           1    0.80105   0.77131   0.78590      6734

    accuracy                        0.78987     13468
   macro avg    0.79027   0.78987   0.78980     13468
weighted avg    0.79027   0.78987   0.78980     13468

training 451
training 452
training 453
training 454
training 455
training 456
training 457
training 458
training 459
training 460
training 461
training 462
training 463
training 464
training 465
training 466
training 467
training 468
training 469
training 470
training 471
training 472
training 473
training 474
training 475
training 476
training 477
training 478
training 479
training 480
training 481
training 482
training 483
training 484
training 485
training 486
training 487
training 488
training 489
training 490
training 491
training 492
training 493
training 494
training 495
training 496
training 497
training 498
training 499
training 500
testing 500
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
              precision    recall  f1-score   support

           0    0.79891   0.76225   0.78015      6734
           1    0.77268   0.80814   0.79001      6734

    accuracy                        0.78519     13468
   macro avg    0.78580   0.78519   0.78508     13468
weighted avg    0.78580   0.78519   0.78508     13468

training 501
training 502
training 503
training 504
training 505
training 506
training 507
training 508
training 509
training 510
training 511
training 512
training 513
training 514
training 515
training 516
training 517
training 518
training 519
training 520
training 521
training 522
training 523
training 524
training 525
training 526
training 527
training 528
training 529
training 530
training 531
training 532
training 533
training 534
training 535
training 536
training 537
training 538
training 539
training 540
training 541
training 542
training 543
training 544
training 545
training 546
training 547
training 548
training 549
training 550
testing 550
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
              precision    recall  f1-score   support

           0    0.79568   0.79344   0.79456      6734
           1    0.79402   0.79626   0.79514      6734

    accuracy                        0.79485     13468
   macro avg    0.79485   0.79485   0.79485     13468
weighted avg    0.79485   0.79485   0.79485     13468

training 551
training 552
training 553
training 554
training 555
training 556
training 557
training 558
training 559
training 560
training 561
training 562
training 563
training 564
training 565
training 566
training 567
training 568
training 569
training 570
training 571
training 572
training 573
training 574
training 575
training 576
training 577
training 578
training 579
training 580
training 581
training 582
training 583
training 584
training 585
training 586
training 587
training 588
training 589
training 590
training 591
training 592
training 593
training 594
training 595
training 596
training 597
training 598
training 599
training 600
testing 600
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
              precision    recall  f1-score   support

           0    0.78471   0.81408   0.79913      6734
           1    0.80685   0.77666   0.79146      6734

    accuracy                        0.79537     13468
   macro avg    0.79578   0.79537   0.79530     13468
weighted avg    0.79578   0.79537   0.79530     13468

training 601
training 602
training 603
training 604
training 605
training 606
training 607
training 608
training 609
training 610
training 611
training 612
training 613
training 614
training 615
training 616
training 617
training 618
training 619
training 620
training 621
training 622
training 623
training 624
training 625
training 626
training 627
training 628
training 629
training 630
training 631
training 632
training 633
training 634
training 635
training 636
training 637
training 638
training 639
training 640
training 641
training 642
training 643
training 644
training 645
training 646
training 647
training 648
training 649
training 650
testing 650
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
              precision    recall  f1-score   support

           0    0.78388   0.82195   0.80246      6734
           1    0.81286   0.77339   0.79263      6734

    accuracy                        0.79767     13468
   macro avg    0.79837   0.79767   0.79755     13468
weighted avg    0.79837   0.79767   0.79755     13468

training 651
training 652
training 653
training 654
training 655
training 656
training 657
training 658
training 659
training 660
training 661
training 662
training 663
training 664
training 665
training 666
training 667
training 668
training 669
training 670
training 671
training 672
training 673
training 674
training 675
training 676
training 677
training 678
training 679
training 680
training 681
training 682
training 683
training 684
training 685
training 686
training 687
training 688
training 689
training 690
training 691
training 692
training 693
training 694
training 695
training 696
training 697
training 698
training 699
training 700
testing 700
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
              precision    recall  f1-score   support

           0    0.78298   0.82507   0.80347      6734
           1    0.81513   0.77131   0.79261      6734

    accuracy                        0.79819     13468
   macro avg    0.79905   0.79819   0.79804     13468
weighted avg    0.79905   0.79819   0.79804     13468

training 701
training 702
training 703
training 704
training 705
training 706
training 707
training 708
training 709
training 710
training 711
training 712
training 713
training 714
training 715
training 716
training 717
training 718
training 719
training 720
training 721
training 722
training 723
training 724
training 725
training 726
training 727
training 728
training 729
training 730
training 731
training 732
training 733
training 734
training 735
training 736
training 737
training 738
training 739
training 740
training 741
training 742
training 743
training 744
training 745
training 746
training 747
training 748
training 749
training 750
testing 750
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
              precision    recall  f1-score   support

           0    0.76606   0.84274   0.80257      6734
           1    0.82525   0.74265   0.78177      6734

    accuracy                        0.79269     13468
   macro avg    0.79566   0.79269   0.79217     13468
weighted avg    0.79566   0.79269   0.79217     13468

training 751
training 752
training 753
training 754
training 755
training 756
training 757
training 758
training 759
training 760
training 761
training 762
training 763
training 764
training 765
training 766
training 767
training 768
training 769
training 770
training 771
training 772
training 773
training 774
training 775
training 776
training 777
training 778
training 779
training 780
training 781
training 782
training 783
training 784
training 785
training 786
training 787
training 788
training 789
training 790
training 791
training 792
training 793
training 794
training 795
training 796
training 797
training 798
training 799
training 800
testing 800
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
              precision    recall  f1-score   support

           0    0.78908   0.81779   0.80318      6734
           1    0.81091   0.78141   0.79589      6734

    accuracy                        0.79960     13468
   macro avg    0.80000   0.79960   0.79953     13468
weighted avg    0.80000   0.79960   0.79953     13468

training 801
training 802
training 803
training 804
training 805
training 806
training 807
training 808
training 809
training 810
training 811
training 812
training 813
training 814
training 815
training 816
training 817
training 818
training 819
training 820
training 821
training 822
training 823
training 824
training 825
training 826
training 827
training 828
training 829
training 830
training 831
training 832
training 833
training 834
training 835
training 836
training 837
training 838
training 839
training 840
training 841
training 842
training 843
training 844
training 845
training 846
training 847
training 848
training 849
training 850
testing 850
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
              precision    recall  f1-score   support

           0    0.79712   0.80576   0.80142      6734
           1    0.80363   0.79492   0.79925      6734

    accuracy                        0.80034     13468
   macro avg    0.80038   0.80034   0.80034     13468
weighted avg    0.80038   0.80034   0.80034     13468

training 851
training 852
training 853
training 854
training 855
training 856
training 857
training 858
training 859
training 860
training 861
training 862
training 863
training 864
training 865
training 866
training 867
training 868
training 869
training 870
training 871
training 872
training 873
training 874
training 875
training 876
training 877
training 878
training 879
training 880
training 881
training 882
training 883
training 884
training 885
training 886
training 887
training 888
training 889
training 890
training 891
training 892
training 893
training 894
training 895
training 896
training 897
training 898
training 899
training 900
testing 900
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
              precision    recall  f1-score   support

           0    0.78442   0.84021   0.81136      6734
           1    0.82798   0.76908   0.79744      6734

    accuracy                        0.80465     13468
   macro avg    0.80620   0.80465   0.80440     13468
weighted avg    0.80620   0.80465   0.80440     13468

training 901
training 902
training 903
training 904
training 905
training 906
training 907
training 908
training 909
training 910
training 911
training 912
training 913
training 914
training 915
training 916
training 917
training 918
training 919
training 920
training 921
training 922
training 923
training 924
training 925
training 926
training 927
training 928
training 929
training 930
training 931
training 932
training 933
training 934
training 935
training 936
training 937
training 938
training 939
training 940
training 941
training 942
training 943
training 944
training 945
training 946
training 947
training 948
training 949
training 950
testing 950
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
              precision    recall  f1-score   support

           0    0.80064   0.82180   0.81108      6734
           1    0.81696   0.79537   0.80602      6734

    accuracy                        0.80858     13468
   macro avg    0.80880   0.80858   0.80855     13468
weighted avg    0.80880   0.80858   0.80855     13468

training 951
training 952
training 953
training 954
training 955
training 956
training 957
training 958
training 959
training 960
training 961
training 962
training 963
training 964
training 965
training 966
training 967
training 968
training 969
training 970
training 971
training 972
training 973
training 974
training 975
training 976
training 977
training 978
training 979
training 980
training 981
training 982
training 983
training 984
training 985
training 986
training 987
training 988
training 989
training 990
training 991
training 992
training 993
training 994
training 995
training 996
training 997
training 998
training 999
training 1000
testing 1000
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
              precision    recall  f1-score   support

           0    0.76656   0.85388   0.80787      6734
           1    0.83509   0.73998   0.78466      6734

    accuracy                        0.79693     13468
   macro avg    0.80083   0.79693   0.79627     13468
weighted avg    0.80083   0.79693   0.79627     13468

training 1001
training 1002
training 1003
training 1004
training 1005
training 1006
training 1007
training 1008
training 1009
training 1010
training 1011
training 1012
training 1013
training 1014
training 1015
training 1016
training 1017
training 1018
training 1019
training 1020
training 1021
training 1022
training 1023
training 1024
training 1025
training 1026
training 1027
training 1028
training 1029
training 1030
training 1031
training 1032
training 1033
training 1034
training 1035
training 1036
training 1037
training 1038
training 1039
training 1040
training 1041
training 1042
training 1043
training 1044
training 1045
training 1046
training 1047
training 1048
training 1049
training 1050
testing 1050
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
/home/ms-admin/chenzixiao/APSNet/source/./pnet_train_online.py:163: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  print_all_metrics(np.asarray(y_true).astype('int'), np.asarray(y_predicted))
              precision    recall  f1-score   support

           0    0.80809   0.82477   0.81634      6734
           1    0.82108   0.80413   0.81251      6734

    accuracy                        0.81445     13468
   macro avg    0.81458   0.81445   0.81443     13468
weighted avg    0.81458   0.81445   0.81443     13468

training 1051
training 1052
training 1053
training 1054
training 1055
training 1056
training 1057
training 1058
training 1059
training 1060
training 1061
training 1062
training 1063
training 1064
training 1065
training 1066
training 1067
training 1068
training 1069
training 1070
training 1071
training 1072
training 1073
training 1074
training 1075
training 1076
training 1077
training 1078
training 1079
training 1080
training 1081
training 1082
training 1083
training 1084
training 1085
training 1086
training 1087
training 1088
training 1089
training 1090
training 1091
training 1092
training 1093
training 1094
training 1095
training 1096
training 1097
training 1098
